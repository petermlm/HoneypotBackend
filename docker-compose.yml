version: '3.0'
services:
    # Services
    listener:
        container_name: honeypot-listener
        build:
            context: .
            dockerfile: Dockerfile
        entrypoint: ["go", "run", "cmd/listener/listener.go"]
        volumes:
            - ./src:/app
        depends_on:
            - postgres
            - rabbitmq
        ports:
            - "27017:27017"
            - "3306:3306"
            - "5432:5432"
            - "7474:7474"
            - "9200:9200"
    processor:
        container_name: honeypot-processor
        build:
            context: .
            dockerfile: Dockerfile
        entrypoint: ["go", "run", "cmd/processor/processor.go"]
        volumes:
            - ./src:/app
        depends_on:
            - postgres
            - rabbitmq
    storer:
        container_name: honeypot-storer
        build:
            context: .
            dockerfile: Dockerfile
        entrypoint: ["go", "run", "cmd/storer/storer.go"]
        volumes:
            - ./src:/app
        depends_on:
            - postgres
            - rabbitmq
    webserver:
        container_name: honeypot-webserver
        build:
            context: .
            dockerfile: Dockerfile
        entrypoint: ["go", "run", "cmd/webserver/webserver.go"]
        volumes:
            - ./src:/app
        depends_on:
            - rabbitmq
            - influxdb
        ports:
            - "8100:8100"
        depends_on:
            - postgres

    # Postgres and Rabbitmq
    postgres:
        container_name: honeypot-postgres
        image: postgres:9.6
        environment:
          - POSTGRES_DB=honeypot_db
          - POSTGRES_USER=honeypot_user
          - POSTGRES_PASSWORD=honeypot_pass
        ports:
          - "8400:5432"

    rabbitmq:
        image: "rabbitmq:3.8-alpine"
        container_name: honeypot-rabbitmq
        hostname: honeypot-rabbitmq
        ports:
            - "5672:5672"
